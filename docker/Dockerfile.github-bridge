# Build stage
FROM golang:1.22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files
COPY src/github-bridge/go.mod src/github-bridge/go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY src/github-bridge/ ./

# Build the application
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s -X main.version=${VERSION:-dev} -X main.commit=${COMMIT:-none} -X main.date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
    -o github-bridge \
    .

# Runtime stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache ca-certificates git openssh-client

# Create non-root user
RUN addgroup -g 1000 virtualdom && \
    adduser -D -u 1000 -G virtualdom virtualdom

# Copy binary from builder
COPY --from=builder /app/github-bridge /usr/local/bin/github-bridge

# Create necessary directories
RUN mkdir -p /home/virtualdom/.ssh /tmp/github-bridge && \
    chown -R virtualdom:virtualdom /home/virtualdom /tmp/github-bridge

# Security labels
LABEL security.scan="enabled" \
      security.user="non-root" \
      security.git="enabled"

# Expose metrics port
EXPOSE 9091

# Switch to non-root user
USER virtualdom

# Set working directory
WORKDIR /home/virtualdom

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:9091/health || exit 1

# Run the application
CMD ["github-bridge"]